//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace APP.MEF.EXTRANET.FAG.PAG.WCF_STD22 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiciosSTDPortBinding", Namespace="http://ws.web.bs.std.mef.gob.pe/")]
    public partial class serviciosstd : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback crearExpedienteFAGOperationCompleted;
        
        private System.Threading.SendOrPostCallback crearLAIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback crearQuejasOperationCompleted;
        
        private System.Threading.SendOrPostCallback crearReclamosOperationCompleted;
        
        private System.Threading.SendOrPostCallback getListaDePendientesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDGCPHROperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDGCPHROperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public serviciosstd() {
            this.Url = global::APP.MEF.EXTRANET.FAG.PAG.Properties.Settings.Default.APP_MEF_EXTRANET_FAG_PAG_WCF_STD22_serviciosstd;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event crearExpedienteFAGCompletedEventHandler crearExpedienteFAGCompleted;
        
        /// <remarks/>
        public event crearLAIPCompletedEventHandler crearLAIPCompleted;
        
        /// <remarks/>
        public event crearQuejasCompletedEventHandler crearQuejasCompleted;
        
        /// <remarks/>
        public event crearReclamosCompletedEventHandler crearReclamosCompleted;
        
        /// <remarks/>
        public event getListaDePendientesCompletedEventHandler getListaDePendientesCompleted;
        
        /// <remarks/>
        public event getDGCPHRCompletedEventHandler getDGCPHRCompleted;
        
        /// <remarks/>
        public event updateDGCPHRCompletedEventHandler updateDGCPHRCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://ws.web.bs.std.mef.gob.pe/", ResponseNamespace="http://ws.web.bs.std.mef.gob.pe/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("URLFAG")]
        public hrDto crearExpedienteFAG(
                    string NUM_REGISTRO, 
                    string NUM_OFICIO, 
                    int NUM_FOLIOS, 
                    string ASUNTO, 
                    string CLASIFICACION, 
                    string RAZONSOCIAL, 
                    string RUC, 
                    string SEC_EJECT, 
                    string DIRECCION, 
                    string DEPARTAMENTO, 
                    string PROVINCIA, 
                    string DISTRITO, 
                    string CORREO, 
                    string OBSERVACION, 
                    anexoDto OFICIO, 
                    anexoDto RESUMEN, 
                    [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] anexoDto[] ANEXOS, 
                    string REMOTEADDRESS) {
            object[] results = this.Invoke("crearExpedienteFAG", new object[] {
                        NUM_REGISTRO,
                        NUM_OFICIO,
                        NUM_FOLIOS,
                        ASUNTO,
                        CLASIFICACION,
                        RAZONSOCIAL,
                        RUC,
                        SEC_EJECT,
                        DIRECCION,
                        DEPARTAMENTO,
                        PROVINCIA,
                        DISTRITO,
                        CORREO,
                        OBSERVACION,
                        OFICIO,
                        RESUMEN,
                        ANEXOS,
                        REMOTEADDRESS});
            return ((hrDto)(results[0]));
        }
        
        /// <remarks/>
        public void crearExpedienteFAGAsync(
                    string NUM_REGISTRO, 
                    string NUM_OFICIO, 
                    int NUM_FOLIOS, 
                    string ASUNTO, 
                    string CLASIFICACION, 
                    string RAZONSOCIAL, 
                    string RUC, 
                    string SEC_EJECT, 
                    string DIRECCION, 
                    string DEPARTAMENTO, 
                    string PROVINCIA, 
                    string DISTRITO, 
                    string CORREO, 
                    string OBSERVACION, 
                    anexoDto OFICIO, 
                    anexoDto RESUMEN, 
                    anexoDto[] ANEXOS, 
                    string REMOTEADDRESS) {
            this.crearExpedienteFAGAsync(NUM_REGISTRO, NUM_OFICIO, NUM_FOLIOS, ASUNTO, CLASIFICACION, RAZONSOCIAL, RUC, SEC_EJECT, DIRECCION, DEPARTAMENTO, PROVINCIA, DISTRITO, CORREO, OBSERVACION, OFICIO, RESUMEN, ANEXOS, REMOTEADDRESS, null);
        }
        
        /// <remarks/>
        public void crearExpedienteFAGAsync(
                    string NUM_REGISTRO, 
                    string NUM_OFICIO, 
                    int NUM_FOLIOS, 
                    string ASUNTO, 
                    string CLASIFICACION, 
                    string RAZONSOCIAL, 
                    string RUC, 
                    string SEC_EJECT, 
                    string DIRECCION, 
                    string DEPARTAMENTO, 
                    string PROVINCIA, 
                    string DISTRITO, 
                    string CORREO, 
                    string OBSERVACION, 
                    anexoDto OFICIO, 
                    anexoDto RESUMEN, 
                    anexoDto[] ANEXOS, 
                    string REMOTEADDRESS, 
                    object userState) {
            if ((this.crearExpedienteFAGOperationCompleted == null)) {
                this.crearExpedienteFAGOperationCompleted = new System.Threading.SendOrPostCallback(this.OncrearExpedienteFAGOperationCompleted);
            }
            this.InvokeAsync("crearExpedienteFAG", new object[] {
                        NUM_REGISTRO,
                        NUM_OFICIO,
                        NUM_FOLIOS,
                        ASUNTO,
                        CLASIFICACION,
                        RAZONSOCIAL,
                        RUC,
                        SEC_EJECT,
                        DIRECCION,
                        DEPARTAMENTO,
                        PROVINCIA,
                        DISTRITO,
                        CORREO,
                        OBSERVACION,
                        OFICIO,
                        RESUMEN,
                        ANEXOS,
                        REMOTEADDRESS}, this.crearExpedienteFAGOperationCompleted, userState);
        }
        
        private void OncrearExpedienteFAGOperationCompleted(object arg) {
            if ((this.crearExpedienteFAGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.crearExpedienteFAGCompleted(this, new crearExpedienteFAGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://ws.web.bs.std.mef.gob.pe/", ResponseNamespace="http://ws.web.bs.std.mef.gob.pe/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("URL")]
        public string crearLAIP(
                    string codigoUsuario, 
                    string numeroSolicitud, 
                    string nombre, 
                    string razonSocial, 
                    string tipoDocumento, 
                    string numeroDocumento, 
                    string direccion, 
                    string departamento, 
                    string provincia, 
                    string distrito, 
                    string correo, 
                    string telefono, 
                    string tema, 
                    string subtema, 
                    string descripcion, 
                    string medioEntrega, 
                    string observacion, 
                    string remoteAddress) {
            object[] results = this.Invoke("crearLAIP", new object[] {
                        codigoUsuario,
                        numeroSolicitud,
                        nombre,
                        razonSocial,
                        tipoDocumento,
                        numeroDocumento,
                        direccion,
                        departamento,
                        provincia,
                        distrito,
                        correo,
                        telefono,
                        tema,
                        subtema,
                        descripcion,
                        medioEntrega,
                        observacion,
                        remoteAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void crearLAIPAsync(
                    string codigoUsuario, 
                    string numeroSolicitud, 
                    string nombre, 
                    string razonSocial, 
                    string tipoDocumento, 
                    string numeroDocumento, 
                    string direccion, 
                    string departamento, 
                    string provincia, 
                    string distrito, 
                    string correo, 
                    string telefono, 
                    string tema, 
                    string subtema, 
                    string descripcion, 
                    string medioEntrega, 
                    string observacion, 
                    string remoteAddress) {
            this.crearLAIPAsync(codigoUsuario, numeroSolicitud, nombre, razonSocial, tipoDocumento, numeroDocumento, direccion, departamento, provincia, distrito, correo, telefono, tema, subtema, descripcion, medioEntrega, observacion, remoteAddress, null);
        }
        
        /// <remarks/>
        public void crearLAIPAsync(
                    string codigoUsuario, 
                    string numeroSolicitud, 
                    string nombre, 
                    string razonSocial, 
                    string tipoDocumento, 
                    string numeroDocumento, 
                    string direccion, 
                    string departamento, 
                    string provincia, 
                    string distrito, 
                    string correo, 
                    string telefono, 
                    string tema, 
                    string subtema, 
                    string descripcion, 
                    string medioEntrega, 
                    string observacion, 
                    string remoteAddress, 
                    object userState) {
            if ((this.crearLAIPOperationCompleted == null)) {
                this.crearLAIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OncrearLAIPOperationCompleted);
            }
            this.InvokeAsync("crearLAIP", new object[] {
                        codigoUsuario,
                        numeroSolicitud,
                        nombre,
                        razonSocial,
                        tipoDocumento,
                        numeroDocumento,
                        direccion,
                        departamento,
                        provincia,
                        distrito,
                        correo,
                        telefono,
                        tema,
                        subtema,
                        descripcion,
                        medioEntrega,
                        observacion,
                        remoteAddress}, this.crearLAIPOperationCompleted, userState);
        }
        
        private void OncrearLAIPOperationCompleted(object arg) {
            if ((this.crearLAIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.crearLAIPCompleted(this, new crearLAIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://ws.web.bs.std.mef.gob.pe/", ResponseNamespace="http://ws.web.bs.std.mef.gob.pe/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("URL")]
        public string crearQuejas(
                    string codigoUsuario, 
                    string numeroSolicitud, 
                    string apellido, 
                    string nombre, 
                    string razonSocial, 
                    string tipoDocumento, 
                    string numeroDocumento, 
                    string direccion, 
                    string departamento, 
                    string provincia, 
                    string distrito, 
                    string correo, 
                    string telefono, 
                    string descripcion, 
                    string medioEntrega, 
                    string remoteAddress) {
            object[] results = this.Invoke("crearQuejas", new object[] {
                        codigoUsuario,
                        numeroSolicitud,
                        apellido,
                        nombre,
                        razonSocial,
                        tipoDocumento,
                        numeroDocumento,
                        direccion,
                        departamento,
                        provincia,
                        distrito,
                        correo,
                        telefono,
                        descripcion,
                        medioEntrega,
                        remoteAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void crearQuejasAsync(
                    string codigoUsuario, 
                    string numeroSolicitud, 
                    string apellido, 
                    string nombre, 
                    string razonSocial, 
                    string tipoDocumento, 
                    string numeroDocumento, 
                    string direccion, 
                    string departamento, 
                    string provincia, 
                    string distrito, 
                    string correo, 
                    string telefono, 
                    string descripcion, 
                    string medioEntrega, 
                    string remoteAddress) {
            this.crearQuejasAsync(codigoUsuario, numeroSolicitud, apellido, nombre, razonSocial, tipoDocumento, numeroDocumento, direccion, departamento, provincia, distrito, correo, telefono, descripcion, medioEntrega, remoteAddress, null);
        }
        
        /// <remarks/>
        public void crearQuejasAsync(
                    string codigoUsuario, 
                    string numeroSolicitud, 
                    string apellido, 
                    string nombre, 
                    string razonSocial, 
                    string tipoDocumento, 
                    string numeroDocumento, 
                    string direccion, 
                    string departamento, 
                    string provincia, 
                    string distrito, 
                    string correo, 
                    string telefono, 
                    string descripcion, 
                    string medioEntrega, 
                    string remoteAddress, 
                    object userState) {
            if ((this.crearQuejasOperationCompleted == null)) {
                this.crearQuejasOperationCompleted = new System.Threading.SendOrPostCallback(this.OncrearQuejasOperationCompleted);
            }
            this.InvokeAsync("crearQuejas", new object[] {
                        codigoUsuario,
                        numeroSolicitud,
                        apellido,
                        nombre,
                        razonSocial,
                        tipoDocumento,
                        numeroDocumento,
                        direccion,
                        departamento,
                        provincia,
                        distrito,
                        correo,
                        telefono,
                        descripcion,
                        medioEntrega,
                        remoteAddress}, this.crearQuejasOperationCompleted, userState);
        }
        
        private void OncrearQuejasOperationCompleted(object arg) {
            if ((this.crearQuejasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.crearQuejasCompleted(this, new crearQuejasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://ws.web.bs.std.mef.gob.pe/", ResponseNamespace="http://ws.web.bs.std.mef.gob.pe/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("URL")]
        public string crearReclamos(
                    string codigoUsuario, 
                    string numeroSolicitud, 
                    string apellido, 
                    string nombre, 
                    string razonSocial, 
                    string tipoDocumento, 
                    string numeroDocumento, 
                    string direccion, 
                    string departamento, 
                    string provincia, 
                    string distrito, 
                    string correo, 
                    string telefono, 
                    string descripcion, 
                    string medioEntrega, 
                    string remoteAddress) {
            object[] results = this.Invoke("crearReclamos", new object[] {
                        codigoUsuario,
                        numeroSolicitud,
                        apellido,
                        nombre,
                        razonSocial,
                        tipoDocumento,
                        numeroDocumento,
                        direccion,
                        departamento,
                        provincia,
                        distrito,
                        correo,
                        telefono,
                        descripcion,
                        medioEntrega,
                        remoteAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void crearReclamosAsync(
                    string codigoUsuario, 
                    string numeroSolicitud, 
                    string apellido, 
                    string nombre, 
                    string razonSocial, 
                    string tipoDocumento, 
                    string numeroDocumento, 
                    string direccion, 
                    string departamento, 
                    string provincia, 
                    string distrito, 
                    string correo, 
                    string telefono, 
                    string descripcion, 
                    string medioEntrega, 
                    string remoteAddress) {
            this.crearReclamosAsync(codigoUsuario, numeroSolicitud, apellido, nombre, razonSocial, tipoDocumento, numeroDocumento, direccion, departamento, provincia, distrito, correo, telefono, descripcion, medioEntrega, remoteAddress, null);
        }
        
        /// <remarks/>
        public void crearReclamosAsync(
                    string codigoUsuario, 
                    string numeroSolicitud, 
                    string apellido, 
                    string nombre, 
                    string razonSocial, 
                    string tipoDocumento, 
                    string numeroDocumento, 
                    string direccion, 
                    string departamento, 
                    string provincia, 
                    string distrito, 
                    string correo, 
                    string telefono, 
                    string descripcion, 
                    string medioEntrega, 
                    string remoteAddress, 
                    object userState) {
            if ((this.crearReclamosOperationCompleted == null)) {
                this.crearReclamosOperationCompleted = new System.Threading.SendOrPostCallback(this.OncrearReclamosOperationCompleted);
            }
            this.InvokeAsync("crearReclamos", new object[] {
                        codigoUsuario,
                        numeroSolicitud,
                        apellido,
                        nombre,
                        razonSocial,
                        tipoDocumento,
                        numeroDocumento,
                        direccion,
                        departamento,
                        provincia,
                        distrito,
                        correo,
                        telefono,
                        descripcion,
                        medioEntrega,
                        remoteAddress}, this.crearReclamosOperationCompleted, userState);
        }
        
        private void OncrearReclamosOperationCompleted(object arg) {
            if ((this.crearReclamosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.crearReclamosCompleted(this, new crearReclamosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://ws.web.bs.std.mef.gob.pe/", ResponseNamespace="http://ws.web.bs.std.mef.gob.pe/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("URL")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public expedientePendienteWSDto[] getListaDePendientes(string usuario) {
            object[] results = this.Invoke("getListaDePendientes", new object[] {
                        usuario});
            return ((expedientePendienteWSDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getListaDePendientesAsync(string usuario) {
            this.getListaDePendientesAsync(usuario, null);
        }
        
        /// <remarks/>
        public void getListaDePendientesAsync(string usuario, object userState) {
            if ((this.getListaDePendientesOperationCompleted == null)) {
                this.getListaDePendientesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListaDePendientesOperationCompleted);
            }
            this.InvokeAsync("getListaDePendientes", new object[] {
                        usuario}, this.getListaDePendientesOperationCompleted, userState);
        }
        
        private void OngetListaDePendientesOperationCompleted(object arg) {
            if ((this.getListaDePendientesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getListaDePendientesCompleted(this, new getListaDePendientesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://ws.web.bs.std.mef.gob.pe/", ResponseNamespace="http://ws.web.bs.std.mef.gob.pe/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("URL")]
        public hrDto getDGCPHR(
                    string NUM_REGISTRO, 
                    string NUM_OFICIO, 
                    int NUM_FOLIOS, 
                    string ASUNTO, 
                    string CLASIFICACION, 
                    string RAZONSOCIAL, 
                    string RUC, 
                    string SEC_EJECT, 
                    string DIRECCION, 
                    string DEPARTAMENTO, 
                    string PROVINCIA, 
                    string DISTRITO, 
                    string CORREO, 
                    string OBSERVAACION, 
                    [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] anexoDto[] ANEXOS, 
                    string REMOTEADDRESS) {
            object[] results = this.Invoke("getDGCPHR", new object[] {
                        NUM_REGISTRO,
                        NUM_OFICIO,
                        NUM_FOLIOS,
                        ASUNTO,
                        CLASIFICACION,
                        RAZONSOCIAL,
                        RUC,
                        SEC_EJECT,
                        DIRECCION,
                        DEPARTAMENTO,
                        PROVINCIA,
                        DISTRITO,
                        CORREO,
                        OBSERVAACION,
                        ANEXOS,
                        REMOTEADDRESS});
            return ((hrDto)(results[0]));
        }
        
        /// <remarks/>
        public void getDGCPHRAsync(
                    string NUM_REGISTRO, 
                    string NUM_OFICIO, 
                    int NUM_FOLIOS, 
                    string ASUNTO, 
                    string CLASIFICACION, 
                    string RAZONSOCIAL, 
                    string RUC, 
                    string SEC_EJECT, 
                    string DIRECCION, 
                    string DEPARTAMENTO, 
                    string PROVINCIA, 
                    string DISTRITO, 
                    string CORREO, 
                    string OBSERVAACION, 
                    anexoDto[] ANEXOS, 
                    string REMOTEADDRESS) {
            this.getDGCPHRAsync(NUM_REGISTRO, NUM_OFICIO, NUM_FOLIOS, ASUNTO, CLASIFICACION, RAZONSOCIAL, RUC, SEC_EJECT, DIRECCION, DEPARTAMENTO, PROVINCIA, DISTRITO, CORREO, OBSERVAACION, ANEXOS, REMOTEADDRESS, null);
        }
        
        /// <remarks/>
        public void getDGCPHRAsync(
                    string NUM_REGISTRO, 
                    string NUM_OFICIO, 
                    int NUM_FOLIOS, 
                    string ASUNTO, 
                    string CLASIFICACION, 
                    string RAZONSOCIAL, 
                    string RUC, 
                    string SEC_EJECT, 
                    string DIRECCION, 
                    string DEPARTAMENTO, 
                    string PROVINCIA, 
                    string DISTRITO, 
                    string CORREO, 
                    string OBSERVAACION, 
                    anexoDto[] ANEXOS, 
                    string REMOTEADDRESS, 
                    object userState) {
            if ((this.getDGCPHROperationCompleted == null)) {
                this.getDGCPHROperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDGCPHROperationCompleted);
            }
            this.InvokeAsync("getDGCPHR", new object[] {
                        NUM_REGISTRO,
                        NUM_OFICIO,
                        NUM_FOLIOS,
                        ASUNTO,
                        CLASIFICACION,
                        RAZONSOCIAL,
                        RUC,
                        SEC_EJECT,
                        DIRECCION,
                        DEPARTAMENTO,
                        PROVINCIA,
                        DISTRITO,
                        CORREO,
                        OBSERVAACION,
                        ANEXOS,
                        REMOTEADDRESS}, this.getDGCPHROperationCompleted, userState);
        }
        
        private void OngetDGCPHROperationCompleted(object arg) {
            if ((this.getDGCPHRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDGCPHRCompleted(this, new getDGCPHRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://ws.web.bs.std.mef.gob.pe/", ResponseNamespace="http://ws.web.bs.std.mef.gob.pe/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("URL")]
        public hrDto updateDGCPHR(string NUM_STD, int ANIO_STD, string NUM_OFICIO, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] anexoDto[] ANEXOS, string REMOTEADDRESS) {
            object[] results = this.Invoke("updateDGCPHR", new object[] {
                        NUM_STD,
                        ANIO_STD,
                        NUM_OFICIO,
                        ANEXOS,
                        REMOTEADDRESS});
            return ((hrDto)(results[0]));
        }
        
        /// <remarks/>
        public void updateDGCPHRAsync(string NUM_STD, int ANIO_STD, string NUM_OFICIO, anexoDto[] ANEXOS, string REMOTEADDRESS) {
            this.updateDGCPHRAsync(NUM_STD, ANIO_STD, NUM_OFICIO, ANEXOS, REMOTEADDRESS, null);
        }
        
        /// <remarks/>
        public void updateDGCPHRAsync(string NUM_STD, int ANIO_STD, string NUM_OFICIO, anexoDto[] ANEXOS, string REMOTEADDRESS, object userState) {
            if ((this.updateDGCPHROperationCompleted == null)) {
                this.updateDGCPHROperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDGCPHROperationCompleted);
            }
            this.InvokeAsync("updateDGCPHR", new object[] {
                        NUM_STD,
                        ANIO_STD,
                        NUM_OFICIO,
                        ANEXOS,
                        REMOTEADDRESS}, this.updateDGCPHROperationCompleted, userState);
        }
        
        private void OnupdateDGCPHROperationCompleted(object arg) {
            if ((this.updateDGCPHRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDGCPHRCompleted(this, new updateDGCPHRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.web.bs.std.mef.gob.pe/")]
    public partial class anexoDto {
        
        private byte[] archivoField;
        
        private long lengthField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] archivo {
            get {
                return this.archivoField;
            }
            set {
                this.archivoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.web.bs.std.mef.gob.pe/")]
    public partial class expedientePendienteWSDto {
        
        private string asuntoField;
        
        private long dIASMAXIMOField;
        
        private bool dIASMAXIMOFieldSpecified;
        
        private long dIASTRANSCField;
        
        private bool dIASTRANSCFieldSpecified;
        
        private long dIASUOUSUAField;
        
        private bool dIASUOUSUAFieldSpecified;
        
        private string estadoField;
        
        private System.DateTime fechaCreaDField;
        
        private bool fechaCreaDFieldSpecified;
        
        private System.DateTime fechaDerivacionDField;
        
        private bool fechaDerivacionDFieldSpecified;
        
        private long iddocField;
        
        private bool iddocFieldSpecified;
        
        private int itemField;
        
        private bool itemFieldSpecified;
        
        private string numeroDocField;
        
        private string numeroHojaRutaField;
        
        private string observacionField;
        
        private string remitenteField;
        
        private string situacionField;
        
        private string tipoHojaRutaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string asunto {
            get {
                return this.asuntoField;
            }
            set {
                this.asuntoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long DIASMAXIMO {
            get {
                return this.dIASMAXIMOField;
            }
            set {
                this.dIASMAXIMOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DIASMAXIMOSpecified {
            get {
                return this.dIASMAXIMOFieldSpecified;
            }
            set {
                this.dIASMAXIMOFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long DIASTRANSC {
            get {
                return this.dIASTRANSCField;
            }
            set {
                this.dIASTRANSCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DIASTRANSCSpecified {
            get {
                return this.dIASTRANSCFieldSpecified;
            }
            set {
                this.dIASTRANSCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long DIASUOUSUA {
            get {
                return this.dIASUOUSUAField;
            }
            set {
                this.dIASUOUSUAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DIASUOUSUASpecified {
            get {
                return this.dIASUOUSUAFieldSpecified;
            }
            set {
                this.dIASUOUSUAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string estado {
            get {
                return this.estadoField;
            }
            set {
                this.estadoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime fechaCreaD {
            get {
                return this.fechaCreaDField;
            }
            set {
                this.fechaCreaDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fechaCreaDSpecified {
            get {
                return this.fechaCreaDFieldSpecified;
            }
            set {
                this.fechaCreaDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime fechaDerivacionD {
            get {
                return this.fechaDerivacionDField;
            }
            set {
                this.fechaDerivacionDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fechaDerivacionDSpecified {
            get {
                return this.fechaDerivacionDFieldSpecified;
            }
            set {
                this.fechaDerivacionDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long iddoc {
            get {
                return this.iddocField;
            }
            set {
                this.iddocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool iddocSpecified {
            get {
                return this.iddocFieldSpecified;
            }
            set {
                this.iddocFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool itemSpecified {
            get {
                return this.itemFieldSpecified;
            }
            set {
                this.itemFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string numeroDoc {
            get {
                return this.numeroDocField;
            }
            set {
                this.numeroDocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string numeroHojaRuta {
            get {
                return this.numeroHojaRutaField;
            }
            set {
                this.numeroHojaRutaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string observacion {
            get {
                return this.observacionField;
            }
            set {
                this.observacionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string remitente {
            get {
                return this.remitenteField;
            }
            set {
                this.remitenteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string situacion {
            get {
                return this.situacionField;
            }
            set {
                this.situacionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tipoHojaRuta {
            get {
                return this.tipoHojaRutaField;
            }
            set {
                this.tipoHojaRutaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.web.bs.std.mef.gob.pe/")]
    public partial class hrDto {
        
        private System.DateTime fechaCompletoField;
        
        private bool fechaCompletoFieldSpecified;
        
        private long iddocField;
        
        private bool iddocFieldSpecified;
        
        private int numeroAnioField;
        
        private bool numeroAnioFieldSpecified;
        
        private string numeroDocField;
        
        private string numeroSidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime fechaCompleto {
            get {
                return this.fechaCompletoField;
            }
            set {
                this.fechaCompletoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fechaCompletoSpecified {
            get {
                return this.fechaCompletoFieldSpecified;
            }
            set {
                this.fechaCompletoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long iddoc {
            get {
                return this.iddocField;
            }
            set {
                this.iddocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool iddocSpecified {
            get {
                return this.iddocFieldSpecified;
            }
            set {
                this.iddocFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numeroAnio {
            get {
                return this.numeroAnioField;
            }
            set {
                this.numeroAnioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numeroAnioSpecified {
            get {
                return this.numeroAnioFieldSpecified;
            }
            set {
                this.numeroAnioFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string numeroDoc {
            get {
                return this.numeroDocField;
            }
            set {
                this.numeroDocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string numeroSid {
            get {
                return this.numeroSidField;
            }
            set {
                this.numeroSidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void crearExpedienteFAGCompletedEventHandler(object sender, crearExpedienteFAGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class crearExpedienteFAGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal crearExpedienteFAGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public hrDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hrDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void crearLAIPCompletedEventHandler(object sender, crearLAIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class crearLAIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal crearLAIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void crearQuejasCompletedEventHandler(object sender, crearQuejasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class crearQuejasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal crearQuejasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void crearReclamosCompletedEventHandler(object sender, crearReclamosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class crearReclamosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal crearReclamosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getListaDePendientesCompletedEventHandler(object sender, getListaDePendientesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getListaDePendientesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getListaDePendientesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public expedientePendienteWSDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((expedientePendienteWSDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getDGCPHRCompletedEventHandler(object sender, getDGCPHRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDGCPHRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDGCPHRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public hrDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hrDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updateDGCPHRCompletedEventHandler(object sender, updateDGCPHRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateDGCPHRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateDGCPHRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public hrDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hrDto)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591